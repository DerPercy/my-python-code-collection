{% extends "base.jinja2" %}

{% macro progressionInfo(progressionData) %}
    {% set reversed = False %}
    {% if progressionData.max < progressionData.min %}
        {% set reversed = True %}
    {% endif %}
    {% set percentage = 0 %}
    {% set positive = True %}
    {% if reversed == False %}
    {% if progressionData.avg < progressionData.own %}
        {% set percentage = 100 * ( progressionData.own - progressionData.avg ) / ( progressionData.max - progressionData.avg ) %}
    {% elif progressionData.avg > progressionData.own %}
        {% set positive = False %}
        {% set percentage = 100 * ( progressionData.avg - progressionData.own ) / ( progressionData.avg - progressionData.min ) %}
    {% else%}
        {% set percentage = 0 %}
    {% endif %}
    {% else %}
        {% if progressionData.avg > progressionData.own %}
            {% set percentage = 100 * ( progressionData.avg - progressionData.own ) / ( progressionData.avg - progressionData.max ) %}
        {% elif progressionData.avg < progressionData.own %}
            {% set positive = False %}
            {% set percentage = 100 * ( progressionData.own - progressionData.avg ) / ( progressionData.min - progressionData.avg ) %}
        {% else%}
            {% set percentage = 0 %}
        {% endif %}
        
    {% endif %}
    <div class="debug-info">
    {{ positive }}
    {{ percentage }}
    
    {{ progressionData.max }}
    {{ progressionData.min }}
    {{ progressionData.avg }}
    {{ progressionData.own }}
    </div>
    {% set color = "green" %}
    {% if positive == False %}
        {% set color = "red" %}
    {% endif %}
    <div class="progressbar-border" style="border:1px solid black;">
        <div class="progressbar-bar" style="background-color:{{ color }}; height:12px;width:{{ percentage|abs }}%"></div>
    </div> 
{% endmacro %}

{%- macro value_color(value,worst,best) -%}
    {%- if value < worst -%}
        #FF0000
    {%- elif value > best -%}
        #00FF00
    {%- else -%}
        #FFFF00
    {%- endif -%}
{%- endmacro -%}

{% block content %}

<style>
.sorare-game-result-W {
    background-color: lightgreen;
}
.sorare-game-result-D {
    background-color: lightgrey;
}
.sorare-game-result-L {
    background-color: red;
}
</style>

<table>
{% for game in data.result_games %}
    {% set game_id = "game"+ ( loop.index|string ) %}
    <tr class="behavior-show-until" data-show-until="{{ game.date }}">
        <td colspan="2">#{{ loop.index }} - <b>{{ game.name }}</b> => {{ game.date }}<div>{{game.competitionSlug}}</div></td>
    </tr>
    <tr class="behavior-show-until" data-show-until="{{ game.date }}">
        <td>
            <div>
            {% for res in game.homeTeamResults %}
                <span class="sorare-game-result-{{ res }}">{{ res }}</span>
            {% endfor %}
            ({{ game.homeTeamGoals[0] }}:{{ game.homeTeamGoals[1] }})
            </div>
            <div>
                {% for res in game.homeTeamResultsAll %}
                    <span class="sorare-game-result-{{ res }}">{{ res }}</span>
                {% endfor %} (Overall)
            </div>
        </td>
        <td>
            <div>
            {% for res in game.awayTeamResults %}
                <span class="sorare-game-result-{{ res }}">{{ res }}</span>
            {% endfor %}
            ({{ game.awayTeamGoals[0] }}:{{ game.awayTeamGoals[1] }})
            </div>
            <div>
                {% for res in game.awayTeamResultsAll %}
                    <span class="sorare-game-result-{{ res }}">{{ res }}</span>
                {% endfor %} (Overall)
            </div>
        </td>
    </tr>
    <tr class="behavior-show-until" data-show-until="{{ game.date }}">
        <td>
            Offense: {{ progressionInfo(game.homeTeamOffenseIndicator) }}
            Defense: {{ progressionInfo(game.homeTeamDefenseIndicator) }}
        </td>
        <td>
            Offense: {{ progressionInfo(game.awayTeamOffenseIndicator) }}
            Defense: {{ progressionInfo(game.awayTeamDefenseIndicator) }}    
        </td>
    </tr>
    <tr class="behavior-show-until" data-show-until="{{ game.date }}">
        <td>
            <table>
                {% for player in game.home %}
                    <tr>
                        <td><input type="checkbox" class="player-{{game_id}}" value="{{player.slug}}" onchange="handle_{{game_id}}()"/>
                            <b>{{ player.name }}</b> ({{ player.position[:1] }})</td>
                        <td>{{ player.l15 }}</td>
                        <td><span title="{{player.gamesList }}">{{ player.numGames }}</span> </td>
                        <td style="background-color:{{value_color(player.scorePerformance,4,20)}}">
                            {{ player.gamesScore | round(2) }}
                            {% if game.pred_map.get_item(player.slug) %}
                                {{ game.pred_map.get_item(player.slug).calculated_score | round(2) }}
                            {% endif %}
                        </td>
                        <td style="background-color:{{value_color(player.avgAllAroundScore,5,12)}}">{{ player.avgAllAroundScore | round(2) }}</td>
                    </tr>
                    <tr>
                        <td>{{ player.tactic.accuratePass | round(2) }}</td>
                        <td>{{ player.tactic.dribblings | round(2) }}</td>
                        <td>{{ player.tactic.shotsOnGoal | round(2) }}</td>
                        <td>{{ player.tactic.clearance | round(2) }}</td>
                        <td>{{ player.tactic.duelWon | round(2) }}</td>
                    </tr>
                    <tr style="display:none">
                        <td colspan="5">{{ player.tempDetScores  }}</td>
                    </tr>
            {% endfor %}
            </table>
           
        </td>
        <td>
            <table>
                {% for player in game.away %}
                    <tr>
                        <td><input type="checkbox" class="player-{{game_id}}" value="{{player.slug}}" onchange="handle_{{game_id}}()"/>
                            <b>{{ player.name }}</b> ({{ player.position[:1] }})</td>
                        <td>{{ player.l15 }}</td>
                        <td><span title="{{player.gamesList }}">{{ player.numGames }}</span></td>
                        <td style="background-color:{{value_color(player.scorePerformance,4,20)}}">
                            {{ player.gamesScore | round(2) }}
                            {% if game.pred_map.get_item(player.slug) %}
                                {{ game.pred_map.get_item(player.slug).calculated_score | round(2) }}
                            {% endif %}
                        </td>
                        <td style="background-color:{{value_color(player.avgAllAroundScore,5,12)}}">{{ player.avgAllAroundScore | round(2) }}</td>
                    </tr>
                    <tr>
                        <td>{{ player.tactic.accuratePass | round(2) }}</td>
                        <td>{{ player.tactic.dribblings | round(2) }}</td>
                        <td>{{ player.tactic.shotsOnGoal | round(2) }}</td>
                        <td>{{ player.tactic.clearance | round(2) }}</td>
                        <td>{{ player.tactic.duelWon | round(2) }}</td>
                    </tr>
                    <tr style="display:none">
                        <td colspan="5">{{ player.tempDetScores  }}</td>
                    </tr>
            {% endfor %}
            </table>

        </td>
    </tr>
    <script>
        function handle_{{game_id}}(){
            const checked = document.querySelectorAll('input[type="checkbox"].player-{{game_id}}:checked');
            selected = Array.from(checked).map( x => x.value );
            tb_value = "{{game.slug}},"+selected;
            
            document.querySelector('.text-{{game_id}}').value = tb_value
        }
    </script>
    <tr class="behavior-show-until" data-show-until="{{ game.date }}"><td colspan="2"><textarea style="width:100%"class="text-{{game_id}}" onfocus="this.select()"></textarea></td></tr>
{% endfor %}
</table>

<script>
var cusid_ele = document.getElementsByClassName('behavior-show-until');
for (var i = 0; i < cusid_ele.length; ++i) {
    var item = cusid_ele[i];  
    var date_until = Date.parse(item.dataset.showUntil);
    if((date_until - Date.now()) < 0){
        item.style.display = "none";
    }
}
</script>
{% endblock %}
