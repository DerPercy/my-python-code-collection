{% extends "base.jinja2" %}

{% macro progressionInfo(progressionData) %}
    {% set reversed = False %}
    {% if progressionData.max < progressionData.min %}
        {% set reversed = True %}
    {% endif %}
    {% set percentage = 0 %}
    {% set positive = True %}
    {% if reversed == False %}
    {% if progressionData.avg < progressionData.own %}
        {% set percentage = 100 * ( progressionData.own - progressionData.avg ) / ( progressionData.max - progressionData.avg ) %}
    {% elif progressionData.avg > progressionData.own %}
        {% set positive = False %}
        {% set percentage = 100 * ( progressionData.avg - progressionData.own ) / ( progressionData.avg - progressionData.min ) %}
    {% else%}
        {% set percentage = 0 %}
    {% endif %}
    {% else %}
        {% if progressionData.avg > progressionData.own %}
            {% set percentage = 100 * ( progressionData.avg - progressionData.own ) / ( progressionData.avg - progressionData.max ) %}
        {% elif progressionData.avg < progressionData.own %}
            {% set positive = False %}
            {% set percentage = 100 * ( progressionData.own - progressionData.avg ) / ( progressionData.min - progressionData.avg ) %}
        {% else%}
            {% set percentage = 0 %}
        {% endif %}
        
    {% endif %}
    <div class="debug-info">
    {{ positive }}
    {{ percentage }}
    
    {{ progressionData.max }}
    {{ progressionData.min }}
    {{ progressionData.avg }}
    {{ progressionData.own }}
    </div>
    {% set color = "green" %}
    {% if positive == False %}
        {% set color = "red" %}
    {% endif %}
    <div class="progressbar-border" style="border:1px solid black;">
        <div class="progressbar-bar" style="background-color:{{ color }}; height:12px;width:{{ percentage|abs }}%"></div>
    </div> 
{% endmacro %}
{% block content %}

<style>
.sorare-game-result-W {
    background-color: lightgreen;
}
.sorare-game-result-D {
    background-color: lightgrey;
}
.sorare-game-result-L {
    background-color: red;
}
</style>

<table>
{% for game in data.result_games %}
    <tr class="behavior-show-until" data-show-until="{{ game.date }}"><td colspan="2">#{{ loop.index }} - <b>{{ game.name }}</b> => {{ game.date }}</td></tr>
    <tr class="behavior-show-until" data-show-until="{{ game.date }}">
        <td>
            {% for res in game.homeTeamResults %}
                <span class="sorare-game-result-{{ res }}">{{ res }} </span>
            {% endfor %}
            ({{ game.homeTeamGoals[0] }}:{{ game.homeTeamGoals[1] }})
        </td>
        <td>
            {% for res in game.awayTeamResults %}
                <span class="sorare-game-result-{{ res }}">{{ res }}</span>
            {% endfor %}
            ({{ game.awayTeamGoals[0] }}:{{ game.awayTeamGoals[1] }})
        </td>
    </tr>
    <tr class="behavior-show-until" data-show-until="{{ game.date }}">
        <td>
            Offense: {{ progressionInfo(game.homeTeamOffenseIndicator) }}
            Defense: {{ progressionInfo(game.homeTeamDefenseIndicator) }}
        </td>
        <td>
            Offense: {{ progressionInfo(game.awayTeamOffenseIndicator) }}
            Defense: {{ progressionInfo(game.awayTeamDefenseIndicator) }}    
        </td>
    </tr>
    <tr class="behavior-show-until" data-show-until="{{ game.date }}">
        <td>
            {% for player in game.home %}
                <div>{{ player.name }} ({{ player.position }})</div>
                <div>{{ player.stats.percPlayed }}% gespielt</div>
                <div style="display:none">{{ player.stats.percSubst }}% eingewechselt</div>
                <div style="display:none">{{ player.stats.substScore_Avg }} Punkte bei Einwechslung</div>
                <div><b>{{ player.stats.l15l5Performance }} % Steigerung</b></div>
            {% endfor %}
        </td>
        <td>
            {% for player in game.away %}
                <div>{{ player.name }} ({{ player.position }})</div>
                <div>{{ player.stats.percPlayed }}% gespielt</div>
                <div style="display:none">{{ player.stats.percSubst }}% eingewechselt</div>
                <div style="display:none">{{ player.stats.substScore_Avg }} Punkte bei Einwechslung</div>
                <div><b>{{ player.stats.l15l5Performance }} % Steigerung</b></div>
            {% endfor %}

        </td>
    </tr>
{% endfor %}
</table>

<script>
var cusid_ele = document.getElementsByClassName('behavior-show-until');
for (var i = 0; i < cusid_ele.length; ++i) {
    var item = cusid_ele[i];  
    var date_until = Date.parse(item.dataset.showUntil);
    if((date_until - Date.now()) < 0){
        item.style.display = "none";
    }
}
</script>
{% endblock %}
